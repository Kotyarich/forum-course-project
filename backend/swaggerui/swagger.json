{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "BMSTU Web Course 2020 project",
    "title": "Forums API",
    "version": "1.0.0"
  },
  "host": "localhost:5000",
  "paths": {
    "/api/v1/forum/:slug/create": {
      "post": {
        "description": "Добавление новой ветки обсуждения на форум.",
        "tags": [
          "forums"
        ],
        "summary": "Создание ветки",
        "operationId": "threadCreate",
        "parameters": [
          {
            "type": "string",
            "format": "identity",
            "description": "Идентификатор форума.",
            "name": "slug",
            "in": "path",
            "required": true
          },
          {
            "description": "Данные ветки обсуждения.",
            "name": "thread",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Thread"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Ветка обсуждения успешно создана. Возвращает данные созданной ветки обсуждения.",
            "schema": {
              "$ref": "#/definitions/Thread"
            }
          },
          "404": {
            "description": "Автор ветки или форум не найдены.",
            "schema": {
              "$ref": "#/responses/Error"
            }
          },
          "409": {
            "description": "Ветка обсуждения уже существует. Возвращает данные ранее созданной ветки обсуждения.",
            "schema": {
              "$ref": "#/definitions/Thread"
            }
          }
        }
      }
    },
    "/api/v1/forum/:slug/details": {
      "get": {
        "description": "Получение информации о форуме по его идентификатору.",
        "tags": [
          "forums"
        ],
        "summary": "Получение информации о форуме",
        "operationId": "forumGetOne",
        "parameters": [
          {
            "type": "string",
            "format": "identity",
            "description": "Идентификатор форума.",
            "name": "slug",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о форуме.",
            "schema": {
              "$ref": "#/definitions/Forum"
            }
          },
          "404": {
            "description": "Форум отсутсвует в системе.",
            "schema": {
              "$ref": "#/responses/Error"
            }
          }
        }
      }
    },
    "/api/v1/forum/:slug/threads": {
      "get": {
        "description": "Получение списка ветвей обсужления данного форума. Ветви обсуждения выводятся отсортированные по дате создания.",
        "tags": [
          "forums"
        ],
        "summary": "Список ветвей обсужления форума",
        "operationId": "forumGetThreads",
        "parameters": [
          {
            "type": "string",
            "description": "Идентификатор форума.",
            "name": "slug",
            "in": "path",
            "required": true
          },
          {
            "maximum": 10000,
            "minimum": 1,
            "type": "number",
            "default": 100,
            "description": "Максимальное кол-во возвращаемых записей.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Дата создания ветви обсуждения, с которой будут выводиться записи (ветвь обсуждения с указанной датой попадает в результат выборки).",
            "name": "since",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Флаг сортировки по убыванию.",
            "name": "desc",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о ветках обсуждения на форуме.",
            "schema": {
              "$ref": "#/definitions/Threads"
            }
          },
          "404": {
            "description": "Форум отсутсвует в системе.",
            "schema": {
              "$ref": "#/responses/Error"
            }
          }
        }
      }
    },
    "/api/v1/forum/:slug/users": {
      "get": {
        "description": "Получение списка пользователей, у которых есть пост или ветка обсуждения в данном форуме. Пользователи выводятся отсортированные по nickname в порядке возрастания. Порядок сотрировки должен соответсвовать побайтовому сравнение в нижнем регистре.",
        "tags": [
          "forums"
        ],
        "summary": "Пользователи данного форума",
        "operationId": "forumGetUsers",
        "parameters": [
          {
            "type": "string",
            "format": "identity",
            "description": "Идентификатор форума.",
            "name": "slug",
            "in": "path",
            "required": true
          },
          {
            "maximum": 10000,
            "minimum": 1,
            "type": "number",
            "format": "int32",
            "default": 100,
            "description": "Максимальное кол-во возвращаемых записей.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "format": "identity",
            "description": "Идентификатор пользователя, с которого будут выводиться пользоватли (пользователь с данным идентификатором в результат не попадает).",
            "name": "since",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Флаг сортировки по убыванию.",
            "name": "desc",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о пользователях форума.",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          },
          "404": {
            "description": "Форум отсутсвует в системе.",
            "schema": {
              "$ref": "#/responses/Error"
            }
          }
        }
      }
    },
    "/api/v1/forum/create": {
      "post": {
        "description": "Создание нового форума.",
        "tags": [
          "forums"
        ],
        "summary": "Создание форума.",
        "operationId": "forumCreate",
        "parameters": [
          {
            "description": "Данные форума",
            "name": "forum",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ForumInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Форум успешно создан. Возвращает данные созданного форума.",
            "schema": {
              "$ref": "#/definitions/Forum"
            }
          },
          "400": {
            "description": "Владелец форума не найден",
            "schema": {
              "$ref": "#/responses/Error"
            }
          },
          "404": {
            "description": "Форум уже существует. Возвращает данные ранее созданного форума.",
            "schema": {
              "$ref": "#/definitions/Forum"
            }
          }
        }
      }
    },
    "/api/v1/forums": {
      "get": {
        "description": "Получение информации о всех форумах.",
        "tags": [
          "forums"
        ],
        "summary": "Получить все форумы",
        "operationId": "forumGetAll",
        "responses": {
          "200": {
            "description": "Информация о форуме.",
            "schema": {
              "$ref": "#/definitions/Forum"
            }
          }
        }
      }
    },
    "/api/v1/post/:id/details": {
      "get": {
        "description": "Получение информации о ветке обсуждения по его имени.",
        "tags": [
          "posts"
        ],
        "summary": "Получение информации о ветке обсуждения",
        "operationId": "postGetOne",
        "parameters": [
          {
            "type": "number",
            "format": "int64",
            "description": "Идентификатор сообщения.",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "items": {
              "enum": [
                "user",
                "forum",
                "thread"
              ]
            },
            "description": "Включение полной информации о соответвующем объекте сообщения. Если тип объекта не указан, то полная информация об этих объектах не передаётся.",
            "name": "related",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о ветке обсуждения.",
            "schema": {
              "$ref": "#/definitions/PostFull"
            }
          },
          "404": {
            "description": "Ветка обсуждения отсутсвует в форуме.",
            "schema": {
              "$ref": "#/responses/Error"
            }
          }
        }
      },
      "put": {
        "description": "Изменение сообщения на форуме. Если сообщение поменяло текст, то оно должно получить отметку `isEdited`.",
        "tags": [
          "posts"
        ],
        "summary": "Изменение сообщения",
        "operationId": "postUpdate",
        "parameters": [
          {
            "type": "number",
            "format": "int64",
            "description": "Идентификатор сообщения.",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Изменения сообщения.",
            "name": "post",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о сообщении.",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          },
          "404": {
            "description": "Сообщение отсутсвует в форуме.",
            "schema": {
              "$ref": "#/responses/Error"
            }
          }
        }
      }
    },
    "/api/v1/service/clear": {
      "get": {
        "description": "Безвозвратное удаление всей пользовательской информации из базы данных.",
        "consumes": [
          "application/json",
          "application/octet-stream"
        ],
        "tags": [
          "service"
        ],
        "summary": "Очистка всех данных в базе",
        "operationId": "clear",
        "responses": {
          "200": {
            "description": "Очистка базы успешно завершена"
          }
        }
      }
    },
    "/api/v1/service/status": {
      "get": {
        "description": "Получение инфомарции о базе данных.",
        "tags": [
          "service"
        ],
        "summary": "Получение инфомарции о базе данных",
        "operationId": "status",
        "responses": {
          "200": {
            "description": "Кол-во записей в базе данных",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/api/v1/thread/:slug/create": {
      "post": {
        "description": "Добавление новых постов в ветку обсуждения на форум. Все посты, созданные в рамках одного вызова данного метода должны иметь одинаковую дату создания (Post.Created).",
        "tags": [
          "threads"
        ],
        "summary": "Создание новых постов",
        "operationId": "postsCreate",
        "parameters": [
          {
            "type": "string",
            "format": "identity",
            "description": "Идентификатор ветки обсуждения.",
            "name": "slug_or_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Список создаваемых постов.",
            "name": "posts",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Posts"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Посты успешно созданы. Возвращает данные созданных постов в том же порядке, в котором их передали на вход метода.",
            "schema": {
              "$ref": "#/definitions/Posts"
            }
          },
          "404": {
            "description": "Ветка обсуждения отсутствует в базе данных.",
            "schema": {
              "$ref": "#/responses/Error"
            }
          },
          "409": {
            "description": "Хотя бы один родительский пост отсутсвует в текущей ветке обсуждения.",
            "schema": {
              "$ref": "#/responses/Error"
            }
          }
        }
      }
    },
    "/api/v1/thread/:slug/details": {
      "get": {
        "description": "Получение информации о ветке обсуждения по его имени.",
        "tags": [
          "threads"
        ],
        "summary": "Получение информации о ветке обсуждения",
        "operationId": "threadGetOne",
        "parameters": [
          {
            "type": "string",
            "description": "Идентификатор ветки обсуждения.",
            "name": "slug_or_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о ветке обсуждения.",
            "schema": {
              "$ref": "#/definitions/Thread"
            }
          },
          "404": {
            "description": "Ветка обсуждения отсутсвует в форуме.",
            "schema": {
              "$ref": "#/responses/Error"
            }
          }
        }
      },
      "patch": {
        "description": "Обновление ветки обсуждения на форуме.",
        "tags": [
          "threads"
        ],
        "summary": "Обновление ветки",
        "operationId": "threadUpdate",
        "parameters": [
          {
            "type": "string",
            "format": "identity",
            "description": "Идентификатор ветки обсуждения.",
            "name": "slug_or_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Данные ветки обсуждения.",
            "name": "thread",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ThreadUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о ветке обсуждения.",
            "schema": {
              "$ref": "#/definitions/Thread"
            }
          },
          "404": {
            "description": "Ветка обсуждения отсутсвует в форуме.",
            "schema": {
              "$ref": "#/responses/Error"
            }
          }
        }
      }
    },
    "/api/v1/thread/:slug/posts": {
      "get": {
        "description": "Получение списка сообщений в данной ветке форуме. Сообщения выводятся отсортированные по дате создания.",
        "tags": [
          "threads"
        ],
        "summary": "Сообщения данной ветви обсуждения",
        "operationId": "threadGetPosts",
        "parameters": [
          {
            "type": "string",
            "format": "identity",
            "description": "Идентификатор ветки обсуждения.",
            "name": "slug_or_id",
            "in": "path",
            "required": true
          },
          {
            "maximum": 10000,
            "minimum": 1,
            "type": "number",
            "format": "int32",
            "default": 100,
            "description": "Максимальное кол-во возвращаемых записей.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "number",
            "format": "int64",
            "description": "Идентификатор поста, после которого будут выводиться записи (пост с данным идентификатором в результат не попадает).",
            "name": "since",
            "in": "query"
          },
          {
            "enum": [
              "flat",
              "tree",
              "parent_tree"
            ],
            "type": "string",
            "default": "flat",
            "description": "Вид сортировки:\n* flat - по дате, комментарии выводятся простым списком в порядке создания;\n* tree - древовидный, комментарии выводятся отсортированные в дереве по N штук; \n* parent_tree - древовидные с пагинацией по родительским (parent_tree), на странице N родительских комментов и все комментарии прикрепленные к ним, в древвидном отображение.",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Флаг сортировки по убыванию.",
            "name": "desc",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о сообщениях форума.",
            "schema": {
              "$ref": "#/definitions/Posts"
            }
          },
          "404": {
            "description": "Ветка обсуждения отсутсвует в форуме.",
            "schema": {
              "$ref": "#/responses/Error"
            }
          }
        }
      }
    },
    "/api/v1/thread/:slug/vote": {
      "post": {
        "description": "Изменение голоса за ветвь обсуждения. Один пользователь учитывается только один раз и может изменить своё мнение.",
        "tags": [
          "threads"
        ],
        "summary": "Проголосовать за ветвь обсуждения",
        "operationId": "threadVote",
        "parameters": [
          {
            "type": "string",
            "format": "identity",
            "description": "Идентификатор ветки обсуждения.",
            "name": "slug_or_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Информация о голосовании пользователя.",
            "name": "vote",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Vote"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о ветке обсуждения.",
            "schema": {
              "$ref": "#/definitions/Thread"
            }
          },
          "404": {
            "description": "Ветка обсуждения отсутсвует в форуме.",
            "schema": {
              "$ref": "#/responses/Error"
            }
          }
        }
      }
    },
    "/api/v1/user/:nickname/create": {
      "post": {
        "description": "Создание нового пользователя в базе данных.",
        "tags": [
          "user"
        ],
        "summary": "Создание нового пользователя",
        "operationId": "userCreate",
        "parameters": [
          {
            "type": "string",
            "description": "Идентификатор пользователя.",
            "name": "nickname",
            "in": "path",
            "required": true
          },
          {
            "description": "Данные пользовательского профиля.",
            "name": "profile",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Пользователь успешно создан. Возвращает данные созданного пользователя.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "409": {
            "description": "Пользователь уже присутсвует в базе данных. Возвращает данные ранее созданных пользователей с тем же nickname-ом иои email-ом.",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        }
      }
    },
    "/api/v1/user/:nickname/profile": {
      "get": {
        "description": "Получение информации о пользователе форума по его имени.",
        "tags": [
          "user"
        ],
        "summary": "Получение информации о пользователе",
        "operationId": "userGetOne",
        "parameters": [
          {
            "type": "string",
            "description": "Идентификатор пользователя.",
            "name": "nickname",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о пользователе.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "Пользователь отсутсвует в системе.",
            "schema": {
              "$ref": "#/responses/Error"
            }
          }
        }
      },
      "patch": {
        "description": "Изменение информации в профиле пользователя.",
        "tags": [
          "user"
        ],
        "summary": "Изменение данных о пользователе",
        "operationId": "userUpdate",
        "parameters": [
          {
            "type": "string",
            "description": "Идентификатор пользователя.",
            "name": "nickname",
            "in": "path",
            "required": true
          },
          {
            "description": "Изменения профиля пользователя.",
            "name": "profile",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Актуальная информация о пользователе после изменения профиля.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "Пользователь отсутсвует в системе.",
            "schema": {
              "$ref": "#/responses/Error"
            }
          },
          "409": {
            "description": "Новые данные профиля пользователя конфликтуют с имеющимися пользователями.",
            "schema": {
              "$ref": "#/responses/Error"
            }
          }
        }
      }
    },
    "/api/v1/user/auth": {
      "post": {
        "description": "Авторизая пользователя, возвращает cookie c токеном.",
        "tags": [
          "user"
        ],
        "summary": "Авторизация пользователя",
        "operationId": "userAuth",
        "parameters": [
          {
            "description": "Данные пользователя.",
            "name": "credentials",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserLogIn"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Пользователь успешно авторизован. Устанавливается HttpOnly cookie Auth с токеном"
          },
          "403": {
            "description": "Неверные данные пользователя"
          }
        }
      }
    },
    "/api/v1/user/check": {
      "get": {
        "description": "Проверка авторизации пользователя, возвращает информацию о пользователе, если он авторизован",
        "tags": [
          "user"
        ],
        "summary": "Проверка авторизации пользователя",
        "operationId": "userCheck",
        "responses": {
          "200": {
            "description": "Пользователь авторизован",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "403": {
            "description": "Пользователь не был авторизован"
          }
        }
      }
    },
    "/api/v1/user/signout": {
      "get": {
        "description": "Разлогирование пользователя",
        "tags": [
          "user"
        ],
        "summary": "Разлогирование пользователя",
        "operationId": "signOut",
        "responses": {
          "200": {
            "description": "Cookie Auth проставляется просроченной"
          },
          "400": {
            "description": "Пользователь не был авторизован"
          }
        }
      }
    }
  },
  "definitions": {
    "Forum": {
      "description": "Информация о форуме",
      "type": "object",
      "required": [
        "slug",
        "title"
      ],
      "properties": {
        "posts": {
          "description": "Общее количество сообщений в форуме",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Posts",
          "readOnly": true,
          "example": 200000
        },
        "slug": {
          "description": "Человекопонятный URL, уникальное поле",
          "type": "string",
          "uniqueItems": true,
          "x-go-name": "Slug",
          "example": "pirate-stories"
        },
        "threads": {
          "description": "Общее количество ветвей обсуждения в форуме",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Threads",
          "readOnly": true,
          "example": 200
        },
        "title": {
          "description": "Название форума",
          "type": "string",
          "x-go-name": "Title",
          "example": "Pirate stories"
        },
        "user": {
          "description": "Nickname пользователя, создавшего форум",
          "type": "string",
          "x-go-name": "User",
          "example": "j.sparrow"
        }
      },
      "x-go-name": "ForumOutput",
      "x-go-package": "dbProject/forum/delivery/http"
    },
    "ForumInput": {
      "description": "Информация о новом форуме",
      "type": "object",
      "required": [
        "slug",
        "title"
      ],
      "properties": {
        "slug": {
          "description": "Человекопонятный URL, уникальное поле",
          "type": "string",
          "uniqueItems": true,
          "x-go-name": "Slug",
          "example": "pirate-stories"
        },
        "title": {
          "description": "Название форума",
          "type": "string",
          "x-go-name": "Title",
          "example": "Pirate stories"
        },
        "user": {
          "description": "Nickname пользователя, создавшего форум",
          "type": "string",
          "x-go-name": "User",
          "example": "j.sparrow"
        }
      },
      "x-go-package": "dbProject/forum/delivery/http"
    },
    "Post": {
      "description": "Информация о сообщении",
      "type": "object",
      "properties": {
        "author": {
          "description": "Автор сообщения\n\nformat: identity",
          "type": "string",
          "x-go-name": "Author",
          "example": "j.sparrow"
        },
        "created": {
          "description": "Дата создания",
          "type": "string",
          "format": "date-time",
          "x-go-name": "Created",
          "readOnly": true
        },
        "forum": {
          "description": "Идентификатор форума",
          "type": "string",
          "x-go-name": "ForumName",
          "readOnly": true
        },
        "id": {
          "description": "Идентификатор сообщения",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Pk",
          "readOnly": true
        },
        "isEdited": {
          "description": "Истина, если сообщение было изменено",
          "type": "boolean",
          "x-go-name": "IsEdited",
          "readOnly": true
        },
        "message": {
          "description": "Текст сообщения",
          "type": "string",
          "x-go-name": "Message",
          "example": "We should be afraid of the Kraken"
        },
        "parent": {
          "description": "Идентификатор родительского сообщения",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Parent"
        },
        "thread": {
          "description": "Идентификатор ветви обсуждения данного сообщения",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Tid",
          "readOnly": true
        }
      },
      "x-go-package": "dbProject/forum/delivery/http"
    },
    "PostFull": {
      "description": "Полная информация о сообщени, включая связанные объекты",
      "type": "object",
      "properties": {
        "author": {
          "$ref": "#/definitions/UserOutput"
        },
        "forum": {
          "$ref": "#/definitions/Forum"
        },
        "post": {
          "$ref": "#/definitions/Post"
        },
        "thread": {
          "$ref": "#/definitions/Thread"
        }
      },
      "x-go-name": "DetailedInfo",
      "x-go-package": "dbProject/forum/delivery/http"
    },
    "PostUpdate": {
      "description": "Сообщение для обновления существующего",
      "type": "object",
      "properties": {
        "message": {
          "description": "Собственно сообщение",
          "type": "string",
          "x-go-name": "Message",
          "example": "We should be afraid of the Kraken"
        }
      },
      "x-go-name": "postInput",
      "x-go-package": "dbProject/forum/delivery/http"
    },
    "Posts": {
      "type": "object",
      "properties": {
        "posts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Post"
          },
          "x-go-name": "Posts"
        }
      },
      "x-go-package": "dbProject/forum/delivery/http"
    },
    "Status": {
      "type": "object",
      "properties": {
        "forum": {
          "description": "Кол-во разделов в базе данных",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Forums",
          "example": 100
        },
        "post": {
          "description": "Кол-во сообщений в базе данных",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Posts",
          "example": 1000000
        },
        "thread": {
          "description": "Кол-во веток обсуждений в базе данных",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Threads",
          "example": 1000
        },
        "user": {
          "description": "Кол-во пользователей в базе данных",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Users",
          "example": 1000
        }
      },
      "x-go-package": "dbProject/forum/delivery/http"
    },
    "Thread": {
      "description": "Ветка обсуждений на форуме",
      "type": "object",
      "properties": {
        "author": {
          "description": "Пользователь, создавший ветку\n\nformat: identity",
          "type": "string",
          "x-go-name": "Author",
          "example": "j.sparrow"
        },
        "created": {
          "description": "Дата создания ветки",
          "type": "string",
          "format": "date-time",
          "x-go-name": "Created",
          "example": "2017-01-01T00:00:00.000Z"
        },
        "forum": {
          "description": "Форум ветки\n\nformat: identity",
          "type": "string",
          "x-go-name": "ForumName",
          "readOnly": true,
          "example": "pirate-stories"
        },
        "id": {
          "description": "Идентификатор ветки обсуждения",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Id",
          "readOnly": true,
          "example": 42
        },
        "message": {
          "description": "Описание ветки обсуждения",
          "type": "string",
          "x-go-name": "Message",
          "example": "An urgent need to reveal the hiding place of Davy Jones. Who is willing to help in this matter?"
        },
        "posts": {
          "description": "Количество сообщений в ветке",
          "type": "integer",
          "format": "int64",
          "x-go-name": "PostsCount",
          "readOnly": true,
          "example": 100
        },
        "slug": {
          "description": "Человекопонятный URL\n\nformat: identity",
          "type": "string",
          "x-go-name": "Slug",
          "readOnly": true,
          "example": "jones-cache"
        },
        "title": {
          "description": "Заголовок ветки",
          "type": "string",
          "x-go-name": "Title",
          "example": "Davy Jones cache"
        },
        "votes": {
          "description": "Кол-во голосов",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Votes",
          "readOnly": true
        }
      },
      "x-go-package": "dbProject/forum/delivery/http"
    },
    "ThreadUpdate": {
      "type": "object",
      "title": "Сообщение для обновления ветки обсуждения на форуме. Пустые параметры остаются без изменений.",
      "properties": {
        "message": {
          "description": "Описание ветки обсуждения",
          "type": "string",
          "x-go-name": "Message",
          "example": "An urgent need to reveal the hiding place of Davy Jones. Who is willing to help in this matter?"
        },
        "title": {
          "description": "Заголовок ветки обсуждения",
          "type": "string",
          "x-go-name": "Title",
          "example": "Davy Jones cache"
        }
      },
      "x-go-package": "dbProject/forum/delivery/http"
    },
    "Threads": {
      "type": "object",
      "properties": {
        "threads": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Post"
          },
          "x-go-name": "Threads"
        }
      },
      "x-go-package": "dbProject/forum/delivery/http"
    },
    "User": {
      "description": "Информация о пользователе",
      "type": "object",
      "properties": {
        "about": {
          "description": "Описание пользователя",
          "type": "string",
          "x-go-name": "About",
          "example": "This is the day you will always remember as the day that you almost caught Captain Jack Sparrow!"
        },
        "email": {
          "description": "Почтовый адрес пользователя\n\nformat: email",
          "type": "string",
          "x-go-name": "Email",
          "example": "captaina@blackpearl.sea"
        },
        "fullname": {
          "description": "Полное имя пользователя",
          "type": "string",
          "x-go-name": "Fullname",
          "example": "Captain Jack Sparrow"
        },
        "nickname": {
          "description": "Имя пользователя (уникальное поле)\n\nformat: identity",
          "type": "string",
          "x-go-name": "Nickname",
          "readOnly": true,
          "example": "j.sparrow"
        },
        "password": {
          "description": "Пароль пользователя",
          "type": "string",
          "x-go-name": "Password",
          "example": "123456"
        }
      },
      "x-go-name": "userInput",
      "x-go-package": "dbProject/user/delivery/http"
    },
    "UserLogIn": {
      "description": "Данные пользователя для авторизации",
      "type": "object",
      "properties": {
        "nickname": {
          "description": "Имя пользователя",
          "type": "string",
          "x-go-name": "Nickname"
        },
        "password": {
          "description": "Пароль пользователя",
          "type": "string",
          "x-go-name": "Password"
        }
      },
      "x-go-name": "signInInput",
      "x-go-package": "dbProject/user/delivery/http"
    },
    "UserOutput": {
      "type": "object",
      "properties": {
        "about": {
          "type": "string",
          "x-go-name": "About"
        },
        "email": {
          "type": "string",
          "x-go-name": "Email"
        },
        "fullname": {
          "type": "string",
          "x-go-name": "Fullname"
        },
        "nickname": {
          "type": "string",
          "x-go-name": "Nickname"
        }
      },
      "x-go-package": "dbProject/user/delivery/http"
    },
    "Users": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserOutput"
          },
          "x-go-name": "Users"
        }
      },
      "x-go-package": "dbProject/user/delivery/http"
    },
    "Vote": {
      "description": "Информация о голосовании пользователя",
      "type": "object",
      "properties": {
        "nickname": {
          "description": "Имя пользователя\n\nformat: identity",
          "type": "string",
          "x-go-name": "Nickname"
        },
        "voice": {
          "description": "Отданный голос",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Voice"
        }
      },
      "x-go-package": "dbProject/forum/delivery/http"
    }
  },
  "responses": {
    "Error": {
      "description": "Error response payload",
      "schema": {
        "type": "object",
        "properties": {
          "message": {
            "description": "Текстовое описание ошибки.",
            "type": "string",
            "x-go-name": "Message"
          }
        }
      }
    }
  }
}